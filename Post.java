package cms;import java.time.LocalDateTime;import java.util.*;import java.util.concurrent.atomic.AtomicInteger;public class Post {private static AtomicInteger idCounter = new AtomicInteger(1);private int postId;private String title;private String content;private Status status; private Set<String> tags;private Category category; private Author author;private LocalDateTime createdAt;private LocalDateTime updatedAt;private LocalDateTime publishedAt;public Post(String title, String content, Author author) {this.postId = idCounter.getAndIncrement();this.title = title;this.content = content;this.author = author;this.status = Status.DRAFT;this.tags = new HashSet<>();this.createdAt = LocalDateTime.now();this.updatedAt = this.createdAt;}public int getPostId() { return postId; }public String getTitle() { return title; }public void setTitle(String title) { this.title = title; touch(); }public String getContent() { return content; }public void setContent(String content) { this.content = content; touch(); }public Status getStatus() { return status; }protected void setStatus(Status status) {this.status = status;if (status == Status.PUBLISHED) {this.publishedAt = LocalDateTime.now();}touch();}public Set<String> getTags() { return tags; }public void addTag(String tag) { this.tags.add(tag); touch(); }public void removeTag(String tag) { this.tags.remove(tag); touch(); }public Category getCategory() { return category; }protected void setCategory(Category category) { this.category = category; touch(); }public Author getAuthor() { return author; }public LocalDateTime getCreatedAt() { return createdAt; }public LocalDateTime getUpdatedAt() { return updatedAt; }public LocalDateTime getPublishedAt() { return publishedAt; }private void touch() { this.updatedAt = LocalDateTime.now(); }@Overridepublic String toString() {return String.format("Post[%d] %s - %s (status=%s)",postId,title,author != null ? author.getName() : "Unknown",status);}public enum Status {DRAFT, REVIEW, PUBLISHED}}
